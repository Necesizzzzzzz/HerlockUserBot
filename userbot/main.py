# Copyright (C) 2019 The Raphielscape Company LLC.
#
# Licensed under the Raphielscape Public License, Version 1.c (the "License");
# you may not use this file except in compliance with the License.
#

# Herlock UserBot - SakirBey1 - ByMisakiMey

""" UserBot ba≈ülangƒ±√ß noktasƒ± """
import importlib
from importlib import import_module
from sqlite3 import connect
import os
import requests
from telethon.tl.types import InputMessagesFilterDocument
from telethon.errors.rpcerrorlist import PhoneNumberInvalidError
from telethon.tl.functions.channels import GetMessagesRequest
from . import BRAIN_CHECKER, LOGS, bot, PLUGIN_CHANNEL_ID, CMD_HELP, LANGUAGE, HERLOCK_VERSION, PATTERNS, DEFAULT_NAME, BOT_TOKEN
from .modules import ALL_MODULES
from .asisstant.modules import ALL_MODULE
import userbot.modules.sql_helper.mesaj_sql as MSJ_SQL
import userbot.modules.sql_helper.galeri_sql as GALERI_SQL
from pySmartDL import SmartDL
from telethon.tl import functions
from random import choice
import chromedriver_autoinstaller
from json import loads, JSONDecodeError
import re
import userbot.cmdhelp
import glob

ALIVE_MSG = [
    "        **Hey {herlocksahip} **\n \n‚ú® Y√ºklenen Plugin Sayƒ±sƒ± {plugin}\n \nüë®üèº‚Äçüíª Python S√ºr√ºm√º {python}\n \n‚ö°Ô∏èTelethon S√ºr√ºm {telethon}\n \nBotun Sapa Saƒülam √áalƒ±≈üƒ±yor iyi g√ºnler :)‚òÑÔ∏è\n\n\n         Herlock S√ºr√ºm {herlock} ",
    "üéÜ `Qorxma! S…ôni yanlƒ±z bƒ±raxmaram.` **{herlocksahip}**, `HerlockUserbot aktivdir.` \n Bot Versiyasƒ±: {herlock} ",
    "`‚õàÔ∏è ∆èlimd…ôn g…ôl…ônin …ôn yax≈üƒ±sƒ±n edm…ôy…ô hazƒ±ram`, **{herlocksahip}** \n Bot Versiyasƒ±: {herlock} ",
    "‚ú® `HerlockUserBot sahibinin …ômirl…ôrin…ô hazƒ±r...` \n Bot Versiyasƒ±: {herlock} ",
    "`ƒ∞ndi …ôn g…ôli≈ümi≈ü userbotun hazƒ±rladƒ±ƒüƒ± mesajƒ± oxuyar olmalƒ±san` **{herlocksahip}**. \n Bot Versiyasƒ±: {herlock} ",
    "`M…ôni Axtarƒ±rsan ‚ùì M…ôn Buradayam Qorxma` \n Bot Versiyasƒ±: {herlock} "
]

DIZCILIK_STR = [
    "√áƒ±kartmayƒ± dƒ±zlƒ±yorum...",
    "√áaldƒ±m Gitti Ge√ßmi≈ü Olsun ü§≠",
    "Ya≈üasƒ±n dƒ±zcƒ±lƒ±k...",
    "Bu √ßƒ±kartmayƒ± kendi paketime davet ediyorum...",
    "Bunu dƒ±zlamam lazƒ±m...",
    "Hey bu g√ºzel bir √ßƒ±kartma!\nHemen dƒ±zlƒ±yorum..",
    "√áƒ±kartmanƒ± dƒ±zlƒ±yorum\nhahaha.",
    "Hey ≈üuraya bak. (‚òâÔΩ°‚òâ)!‚Üí\nBen bunu dƒ±zlarken...",
    "G√ºller kƒ±rmƒ±zƒ± menek≈üeler mavi, bu √ßƒ±kartmayƒ± paketime dƒ±zlayarak havalƒ± olacaƒüƒ±m...",
    "√áƒ±kartma hapsediliyor...",
    "Bay dƒ±zcƒ± bu √ßƒ±kartmayƒ± dƒ±zlƒ±yor... ",
    "Bu g√ºzel √ßƒ±kartma neden benim paketimde de olmasƒ±nü§≠",
]

AFKSTR = [
    "ƒ∞ndi t…ôcili i≈üim var, daha sonra mesaj atsan olmaz? D…ôqiq yenid…ôn g…ôl…ôc…ôyim.",
    "∆èziz sahibim burda deyil cevap. Sahibim burda olanda siz…ô cavab ver…ôc…ôk mesajƒ±nƒ±zƒ± yazabil…ôrsiz. sizl…ô danisan sahibim userbotu. \n`Herlock`!",
    "Birne√ß…ô d…ôqiq…ô i√ßind…ô g…ôl…ôc…ôy…ôm. ∆èg…ôr g…ôlm…ôzs…ôm...\ndaha cox g√∂zd…ô.",
    "≈ûu an burada deƒüilim, ama muhtemelen ba≈üka bir yerdeyim.",
    "G√ºller kƒ±rmƒ±zƒ±\nMenek≈üeler mavi\nBana bir mesaj bƒ±rak\nVe sana d√∂neceƒüim.",
    "Bazen hayattaki en iyi ≈üeyler beklemeye deƒüer‚Ä¶\nHemen d√∂nerim.",
    "Hemen d√∂nerim,\nama eƒüer geri d√∂nmezsem,\ndaha sonra d√∂nerim.",
    "Hen√ºz anlamadƒ±ysan,\nburada deƒüilim.",
    "Merhaba, uzak mesajƒ±ma ho≈ü geldiniz, bug√ºn sizi nasƒ±l g√∂rmezden gelebilirim?",
    "7 deniz ve 7 √ºlkeden uzaktayƒ±m,\n7 su ve 7 kƒ±ta,\n7 daƒü ve 7 tepe,\n7 ovala ve 7 h√∂y√ºk,\n7 havuz ve 7 g√∂l,\n7 bahar ve 7 √ßayƒ±r,\n7 ≈üehir ve 7 mahalle,\n7 blok ve 7 ev...\n\nMesajlarƒ±n bile bana ula≈üamayacaƒüƒ± bir yer!",
    "≈ûu anda klavyeden uzaktayƒ±m, ama ekranƒ±nƒ±zda yeterince y√ºksek sesle √ßƒ±ƒülƒ±k atarsanƒ±z, sizi duyabilirim.",
    "≈ûu y√∂nde ilerliyorum\n---->",
    "≈ûu y√∂nde ilerliyorum\n<----",
    "L√ºtfen mesaj bƒ±rakƒ±n ve beni zaten olduƒüumdan daha √∂nemli hissettirin.",
    "Sahibim burada deƒüil, bu y√ºzden bana yazmayƒ± bƒ±rak.",
    "Burada olsaydƒ±m,\nSana nerede olduƒüumu s√∂ylerdim.\n\nAma ben deƒüilim,\ngeri d√∂nd√ºƒü√ºmde bana sor...",
    "Uzaklardayƒ±m!\nNe zaman d√∂nerim bilmiyorum !\nUmarƒ±m birka√ß dakika sonra!",
    "Sahibim ≈üuan da m√ºsait deƒüil. Adƒ±nƒ±zƒ±, numarƒ±nƒ±zƒ± ve adresinizi verirseniz ona iletibilirm ve b√∂ylelikle geri d√∂nd√ºƒü√º zaman.",
    "√úzg√ºn√ºm, sahibim burada deƒüil.\nO gelene kadar benimle konu≈üabilirsiniz.\nSahibim size sonra d√∂ner.",
    "Bahse girerim bir mesaj bekliyordun!",
    "Hayat √ßok kƒ±sa, yapacak √ßok ≈üey var...\nOnlardan birini yapƒ±yorum...",
    "≈ûu an burada deƒüilim....\nama √∂yleysem ...\n\nbu harika olmaz mƒ±ydƒ±?",
    "Beni hatƒ±rladƒ±ƒüƒ±na sevindim ama ≈üuanda klavye bana √ßok uzak",
    "Belki ƒ∞yiyim, Belki K√∂t√ºy√ºm Bilmiyorsun Ama AFK Olduƒüumu G√∂rebiliyorsun"
]

KICKME_MSG = [
    "G√ºl…ô g√ºl…ô m…ôn gedir…ôm üëãüèª",
    "S…ôssizc…ô √ßƒ±xƒ±ram ü•¥",
    "X…ôb…ôrin olmadan √ßƒ±xarsam bir g√ºn m…ônim qrupta olmadƒ±ƒüƒ±mƒ± bil…ôc…ôks…ôn.. buna g√∂r…ô bu mesajƒ± yaziramüö™",
    "Bu d…ôqiq…ô buranƒ± t…ôrk edir…ômüòî"
]

CV_MSG = [
    "**{DEFAULT_NAME}** `Fazla Bi M…ôlumat Ayarlamamƒ±≈ü Ama Bunu Bilir…ôm Ki G√∂z…ôl Zovq√ºn Var √á√ºnki Herlock Userbot ƒ∞sl…ôdirs…ôn.` üòÅ",
    "`√úzg√ºn√ºm sana ver…ôc…ôk bir m…ôlumatim yox.`"
]


UNAPPROVED_MSG = ("`Hey olduƒüun yerde kal,!üë®‚Äçüíª Ben` @HerlockUserBot1 . `Endi≈üelenme!`\n\n"
                  "`Sahibim sana mesaj atma izni vermedi o y√ºzden sahibim seni onaylayana kadar bu mesajƒ± alacaksƒ±n.. `"
                  "`L√ºtfen sahibimin aktif olmasƒ±nƒ± bekleyin, o genellikle PM'leri onaylar.\n\n`"
                  "`Bildiƒüim kadarƒ±yla o kafayƒ± yemi≈ü insanlara PM izni vermiyor.`")

DB = connect("learning-data-root.check")
CURSOR = DB.cursor()
CURSOR.execute("""SELECT * FROM BRAIN1""")
ALL_ROWS = CURSOR.fetchall()



INVALID_PH = '\nHATA: Girilen telefon numarasƒ± ge√ßersiz' \
             '\n  Ipucu: √úlke kodunu kullanarak numaranƒ± gir' \
             '\n   Telefon numaranƒ±zƒ± tekrar kontrol edin'

for i in ALL_ROWS:
    BRAIN_CHECKER.append(i[0])
connect("learning-data-root.check").close()
BRAIN_CHECKER = BRAIN_CHECKER[0]


def extractCommands(file):
    FileRead = open(file, 'r').read()
    
    if '/' in file:
        file = file.split('/')[-1]

    Pattern = re.findall(r"@register\(.*pattern=(r|)\"(.*)\".*\)", FileRead)
    Komutlar = []

    if re.search(r'CmdHelp\(.*\)', FileRead):
        pass
    else:
        dosyaAdi = file.replace('.py', '')
        CmdHelp = userbot.cmdhelp.CmdHelp(dosyaAdi, False)

        # Komutlarƒ± Alƒ±yoruz #
        for Command in Pattern:
            Command = Command[1]
            if Command == '' or len(Command) <= 1:
                continue
            Komut = re.findall("(^.*[a-zA-Z0-9≈üƒü√º√∂√ßƒ±]\w)", Command)
            if (len(Komut) >= 1) and (not Komut[0] == ''):
                Komut = Komut[0]
                if Komut[0] == '^':
                    KomutStr = Komut[1:]
                    if KomutStr[0] == '.':
                        KomutStr = KomutStr[1:]
                    Komutlar.append(KomutStr)
                else:
                    if Command[0] == '^':
                        KomutStr = Command[1:]
                        if KomutStr[0] == '.':
                            KomutStr = KomutStr[1:]
                        else:
                            KomutStr = Command
                        Komutlar.append(KomutStr)

            # HERLOCKPY
            Herlockpy = re.search('\"\"\"HERLOCKPY(.*)\"\"\"', FileRead, re.DOTALL)
            if not Herlockpy == None:
                Herlockpy = Herlockpy.group(0)
                for Satir in Herlockpy.splitlines():
                    if (not '"""' in Satir) and (':' in Satir):
                        Satir = Satir.split(':')
                        Isim = Satir[0]
                        Deger = Satir[1][1:]
                                
                        if Isim == 'INFO':
                            CmdHelp.add_info(Deger)
                        elif Isim == 'WARN':
                            CmdHelp.add_warning(Deger)
                        else:
                            CmdHelp.set_file_info(Isim, Deger)
            for Komut in Komutlar:
                # if re.search('\[(\w*)\]', Komut):
                    # Komut = re.sub('(?<=\[.)[A-Za-z0-9_]*\]', '', Komut).replace('[', '')
                CmdHelp.add_command(Komut, None, 'Bu plugin qƒ±raƒüdan y√ºkl…ônmi≈üdir. H…ôrhansƒ± bir m…ôlumat tanƒ±mlanmamƒ±≈ütƒ±r.')
            CmdHelp.add()

try:
    bot.start()
    idim = bot.get_me().id
    herlockbl = requests.get('https://raw.githubusercontent.com/SakirBey1/Datas/main/blacklist.json').json()
    if idim in herlockbl:
        bot.send_message("me", f"`‚ùå Herlock y√∂neticileri sizi bottan k…ônarlasdƒ±rdƒ±! Bot baƒülanƒ±r...`")
        LOGS.error("Herlock y√∂neticileri sizi bottan k…ônarlasdƒ±rdƒ±! Bot baƒülanƒ±r...")
        bot.disconnect()
    # ChromeDriver'ƒ± Ayarlayalƒ±m #
    try:
        chromedriver_autoinstaller.install()
    except:
        pass
    
    # Galeri i√ßin deƒüerler
    GALERI = {}

    # PLUGIN MESAJLARI AYARLIYORUZ
    PLUGIN_MESAJLAR = {}
    ORJ_PLUGIN_MESAJLAR = {"alive": f"{str(choice(ALIVE_MSG))}", "afk": f"`{str(choice(AFKSTR))}`", "kickme": f"`{str(choice(KICKME_MSG))}`", "pm": str(UNAPPROVED_MSG), "dƒ±zcƒ±": str(choice(DIZCILIK_STR)), "cv": str(choice(CV_MSG)), "ban": "üåÄ {mention}`, Banlandƒ±!!`", "mute": "üåÄ {mention}`, sessize alƒ±ndƒ±!`", "approve": "`Merhaba` {mention}`, artƒ±k bana mesaj g√∂nderebilirsin!`", "disapprove": "{mention}`, artƒ±k bana mesaj g√∂nderemezsin!`", "block": "{mention}`, bunu bana mecbur bƒ±raktƒ±n! Seni engelledim!`"}


    PLUGIN_MESAJLAR_TURLER = ["alive", "afk", "kickme", "pm", "dƒ±zcƒ±", "cv", "ban", "mute", "approve", "disapprove", "block"]
    for mesaj in PLUGIN_MESAJLAR_TURLER:
        dmsj = MSJ_SQL.getir_mesaj(mesaj)
        if dmsj == False:
            PLUGIN_MESAJLAR[mesaj] = ORJ_PLUGIN_MESAJLAR[mesaj]
        else:
            if dmsj.startswith("MEDYA_"):
                medya = int(dmsj.split("MEDYA_")[1])
                medya = bot.get_messages(PLUGIN_CHANNEL_ID, ids=medya)

                PLUGIN_MESAJLAR[mesaj] = medya
            else:
                PLUGIN_MESAJLAR[mesaj] = dmsj
    if not PLUGIN_CHANNEL_ID == None:
        LOGS.info("üîÑ Pluginler Y√ºkl…ônir..")
        try:
            KanalId = bot.get_entity(PLUGIN_CHANNEL_ID)
        except:
            KanalId = "me"

        for plugin in bot.iter_messages(KanalId, filter=InputMessagesFilterDocument):
            if plugin.file.name and (len(plugin.file.name.split('.')) > 1) \
                and plugin.file.name.split('.')[-1] == 'py':
                Split = plugin.file.name.split('.')

                if not os.path.exists("./userbot/modules/" + plugin.file.name):
                    dosya = bot.download_media(plugin, "./userbot/modules/")
                else:
                    LOGS.info("Bu Plugin Onsuzda Y√ºkl…ônib " + plugin.file.name)
                    extractCommands('./userbot/modules/' + plugin.file.name)
                    dosya = plugin.file.name
                    continue 
                
                try:
                    spec = importlib.util.spec_from_file_location("userbot.modules." + Split[0], dosya)
                    mod = importlib.util.module_from_spec(spec)

                    spec.loader.exec_module(mod)
                except Exception as e:
                    LOGS.info(f"`[√ó] Y√ºkl…ôm…ô Ba≈üarƒ±sƒ±z! Plugin X…ôtalƒ±!!\n\nX…ôta: {e}`")

                    try:
                        plugin.delete()
                    except:
                        pass

                    if os.path.exists("./userbot/modules/" + plugin.file.name):
                        os.remove("./userbot/modules/" + plugin.file.name)
                    continue
                extractCommands('./userbot/modules/' + plugin.file.name)
    else:
        bot.send_message("me", f"`L√ºtf…ôn pluginl…ôrin qalƒ±cƒ± olmasƒ± √ºcun PLUGIN_CHANNEL_ID'i ayarlayƒ±n.`")


   
except PhoneNumberInvalidError:
    print(INVALID_PH)
    exit(1)

async def FotoDegistir (foto):
    FOTOURL = GALERI_SQL.TUM_GALERI[foto].foto
    r = requests.get(FOTOURL)

    with open(str(foto) + ".jpg", 'wb') as f:
        f.write(r.content)    
    file = await bot.upload_file(str(foto) + ".jpg")
    try:
        await bot(functions.photos.UploadProfilePhotoRequest(
            file
        ))
        return True
    except:
        return False

    
for module_name in ALL_MODULES:
    imported_module = import_module("userbot.modules." + module_name)
if BOT_TOKEN:
 for module_name in ALL_MODULE:
    imported_module = import_module("userbot.asisstant.modules." + module_name)    

os.system("clear")

LOGS.info("+===========================================================+")
LOGS.info("|                     ‚ú®Herlcok Userbot‚ú®                       |")
LOGS.info("+==============+==============+==============+==============+")
LOGS.info("|                                                            |")
LOGS.info("Botunuz tam s√ºr…ôtl…ô isdiyir! H…ôrhansƒ± bir sohb…ôtd…ô .alive yazaraq Test edin."
          " Kom…ôk…ô Ehtiyacƒ±nƒ±z varsa, K√∂m…ôk qrubumuza g…ôlin t.me/HerlockSupport1")
LOGS.info(f"Bot versiyanƒ±z: Herlock ==> {HERLOCK_VERSION}")

"""
if len(argv) not in (1, 3, 4):
    bot.disconnect()
else:
"""
bot.run_until_disconnected()
